<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- @ResponseBody 中文乱码问题 -->
	<!-- 返回string时候 正常展示，没有中文乱码 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">
					<constructor-arg value="UTF-8" />
					<property name="supportedMediaTypes">
						<list>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
					<property name="writeAcceptCharset" value="false" />
				</bean>
				<bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
				<bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<!--
		使用 ResponseBody时候， 如果返回 JsonObject，Bean可以支持中文乱码， 但是value不能是null，否则 jackson无法解析。
		返回string类型时候，需要在RequestMapping中要produces = {"application/json;charset=UTF-8"}，来指定编码和返回格式。
	  -->
	<!--<bean-->
		<!--class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">-->
		<!--<property name="messageConverters">-->
			<!--<list>-->
				<!--<bean-->
					<!--class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />-->
				<!--<bean-->
					<!--class="org.springframework.http.converter.StringHttpMessageConverter">-->
					<!--<property name="supportedMediaTypes">-->
						<!--<list>-->
							<!--<bean class="org.springframework.http.MediaType">-->
								<!--<constructor-arg index="0" value="text" />-->
								<!--<constructor-arg index="1" value="plain" />-->
								<!--<constructor-arg index="2" value="UTF-8" />-->
							<!--</bean>-->
						<!--</list>-->
					<!--</property>-->
				<!--</bean>-->
				<!--<bean-->
					<!--class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />-->
				<!--<bean-->
					<!--class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />-->
				<!--<bean-->
					<!--class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />-->
			<!--</list>-->
		<!--</property>-->
	<!--</bean>-->
	<!-- spring扫描该包下所有类 -->
	<context:component-scan base-package="com.kk" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- 默认的注解映射的支持 mvc:annotation-driven 会自动注册DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter两个实例 -->
	<mvc:annotation-driven />

	<!-- 视图解析器，根据视图的名称new ModelAndView(name)，在配置文件查找对应的bean配置 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1" />
	</bean>
	<!-- jackson JsonView视图 -->
	<bean name="jsonView"
		class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
		<property name="encoding">
			<value type="org.codehaus.jackson.JsonEncoding">UTF8</value>
		</property>
		<property name="contentType" value="text/html;charset=UTF-8" />
	</bean>

	<!-- 视图名称扫描器,默认显示/views/下的jsp路径 p:prefix等价于<property name="prefix" value=".."/> -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/views/" p:suffix=".jsp"></bean>

	<!-- 配置500异常，打印异常栈 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">errors/error</prop>
				<prop key="java.lang.Throwable">errors/error</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="errors/error">500</prop>
			</props>
		</property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="NORMAL"></property>
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<property name="defaultErrorView" value="errors/error"></property>
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500"></property>
	</bean>
</beans>